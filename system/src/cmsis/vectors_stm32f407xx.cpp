/*
 * This file was automatically generated by the xPacks scripts.
 * Copyright (c) 2015 Liviu Ionescu.
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

// The list of external handlers is from the ARM assembly startup files.

// ----------------------------------------------------------------------------

#include "cortexm/ExceptionHandlers.h"
#include "interrupthandler.hpp"  //for InterruptHandler

// ----------------------------------------------------------------------------

extern "C" void __attribute__((weak))
Default_Handler(void);

// Forward declaration of the specific IRQ handlers. These are aliased
// to the Default_Handler, which is a 'forever' loop. When the application
// defines a handler (with the same name), this will automatically take
// precedence over these weak definitions

void __attribute__ ((weak, alias ("Default_Handler")))
WWDG_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
PVD_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TAMP_STAMP_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
RTC_WKUP_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
FLASH_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
RCC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI0_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI4_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream0_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream4_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream5_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream6_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
ADC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN1_TX_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN1_RX0_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN1_RX1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN1_SCE_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI9_5_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM1_BRK_TIM9_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM1_UP_TIM10_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM1_TRG_COM_TIM11_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM1_CC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM4_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C1_EV_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C1_ER_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C2_EV_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C2_ER_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
SPI1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
SPI2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
USART1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
USART2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
USART3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
EXTI15_10_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
RTC_Alarm_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_FS_WKUP_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM8_BRK_TIM12_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM8_UP_TIM13_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM8_TRG_COM_TIM14_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM8_CC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA1_Stream7_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
FMC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
SDIO_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM5_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
SPI3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
UART4_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
UART5_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM6_DAC_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
TIM7_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream0_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream2_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream3_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream4_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
ETH_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
ETH_WKUP_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN2_TX_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN2_RX0_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN2_RX1_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
CAN2_SCE_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_FS_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream5_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream6_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DMA2_Stream7_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
USART6_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C3_EV_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
I2C3_ER_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_HS_EP1_OUT_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_HS_EP1_IN_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_HS_WKUP_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
OTG_HS_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
DCMI_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
HASH_RNG_IRQHandler(void);
void __attribute__ ((weak, alias ("Default_Handler")))
FPU_IRQHandler(void);

// ----------------------------------------------------------------------------

extern unsigned int _estack;

typedef void
(* const pHandler)(void);

using tIntFunct = void(*)();
using tIntVectItem = union {tIntFunct __fun; void * __ptr;};

// ----------------------------------------------------------------------------

// The table of interrupt handlers. It has an explicit section name
// and relies on the linker script to place it at the correct location
// in memory.

__attribute__ ((section(".isr_vector"),used))
const tIntVectItem __isr_vectors[] =
  {
    // Cortex-M Core Handlers
    (tIntFunct) &_estack,               // The initial stack pointer
    Reset_Handler,                     // The reset handler

	InterruptHandler::DummyHandler,	//NMI_Handler,                       // The NMI handler
	InterruptHandler::DummyHandler,	//HardFault_Handler,                 // The hard fault handler

#if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
	InterruptHandler::DummyHandler,	//MemManage_Handler,                 // The MPU fault handler
	InterruptHandler::DummyHandler,	//BusFault_Handler,                  // The bus fault handler
	InterruptHandler::DummyHandler,	//UsageFault_Handler,                // The usage fault handler
#else
    0,                                 // Reserved
    0,                                 // Reserved
    0,                                 // Reserved
#endif
    0,                                 // Reserved
    0,                                 // Reserved
    0,                                 // Reserved
    0,                                 // Reserved
	InterruptHandler::DummyHandler,	//SVC_Handler,                       // SVCall handler
#if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
	InterruptHandler::DummyHandler,	//DebugMon_Handler,                  // Debug monitor handler
#else
    0,                                 // Reserved
#endif
    0,                                 // Reserved
	InterruptHandler::DummyHandler,	//PendSV_Handler,                    // The PendSV handler
	InterruptHandler::SysTick_Handler,	//SysTick_Handler,                   // The SysTick handler

    // ----------------------------------------------------------------------
    // External Interrupts
	InterruptHandler::DummyHandler,	//WWDG_IRQHandler,                   // Window WatchDog
	InterruptHandler::DummyHandler,	//PVD_IRQHandler,                    // PVD through EXTI Line detection
	InterruptHandler::DummyHandler,	//TAMP_STAMP_IRQHandler,             // Tamper and TimeStamps through the EXTI line
	InterruptHandler::DummyHandler,	//RTC_WKUP_IRQHandler,               // RTC Wakeup through the EXTI line
	InterruptHandler::DummyHandler,	//FLASH_IRQHandler,                  // FLASH
	InterruptHandler::DummyHandler,	//RCC_IRQHandler,                    // RCC
	InterruptHandler::DummyHandler,	//EXTI0_IRQHandler,                  // EXTI Line0
	InterruptHandler::DummyHandler,	//EXTI1_IRQHandler,                  // EXTI Line1
	InterruptHandler::DummyHandler,	//EXTI2_IRQHandler,                  // EXTI Line2
	InterruptHandler::DummyHandler,	//EXTI3_IRQHandler,                  // EXTI Line3
	InterruptHandler::DummyHandler,	//EXTI4_IRQHandler,                  // EXTI Line4
	InterruptHandler::DummyHandler,	//DMA1_Stream0_IRQHandler,           // DMA1 Stream 0
	InterruptHandler::DummyHandler,	//DMA1_Stream1_IRQHandler,           // DMA1 Stream 1
	InterruptHandler::DummyHandler,	//DMA1_Stream2_IRQHandler,           // DMA1 Stream 2
	InterruptHandler::DummyHandler,	//DMA1_Stream3_IRQHandler,           // DMA1 Stream 3
	InterruptHandler::DummyHandler,	//DMA1_Stream4_IRQHandler,           // DMA1 Stream 4
	InterruptHandler::DummyHandler,	//DMA1_Stream5_IRQHandler,           // DMA1 Stream 5
	InterruptHandler::DummyHandler,	//DMA1_Stream6_IRQHandler,           // DMA1 Stream 6
	InterruptHandler::DummyHandler,	//ADC_IRQHandler,                    // ADC1, ADC2 and ADC3s
	InterruptHandler::DummyHandler,	//CAN1_TX_IRQHandler,                // CAN1 TX
	InterruptHandler::DummyHandler,	//CAN1_RX0_IRQHandler,               // CAN1 RX0
	InterruptHandler::DummyHandler,	//CAN1_RX1_IRQHandler,               // CAN1 RX1
	InterruptHandler::DummyHandler,	//CAN1_SCE_IRQHandler,               // CAN1 SCE
	InterruptHandler::DummyHandler,	//EXTI9_5_IRQHandler,                // External Line[9:5]s
	InterruptHandler::DummyHandler,	//TIM1_BRK_TIM9_IRQHandler,          // TIM1 Break and TIM9
	InterruptHandler::DummyHandler,	//TIM1_UP_TIM10_IRQHandler,          // TIM1 Update and TIM10
	InterruptHandler::DummyHandler,	//TIM1_TRG_COM_TIM11_IRQHandler,     // TIM1 Trigger and Commutation and TIM11
	InterruptHandler::DummyHandler,	//TIM1_CC_IRQHandler,                // TIM1 Capture Compare
	InterruptHandler::DummyHandler,	//TIM2_IRQHandler,                   // TIM2
	InterruptHandler::DummyHandler,	//TIM3_IRQHandler,                   // TIM3
	InterruptHandler::DummyHandler,	//TIM4_IRQHandler,                   // TIM4
	InterruptHandler::DummyHandler,	//I2C1_EV_IRQHandler,                // I2C1 Event
	InterruptHandler::DummyHandler,	//I2C1_ER_IRQHandler,                // I2C1 Error
	InterruptHandler::DummyHandler,	//I2C2_EV_IRQHandler,                // I2C2 Event
	InterruptHandler::DummyHandler,	//I2C2_ER_IRQHandler,                // I2C2 Error
	InterruptHandler::DummyHandler,	//SPI1_IRQHandler,                   // SPI1
	InterruptHandler::DummyHandler,	//SPI2_IRQHandler,                   // SPI2
	InterruptHandler::DummyHandler,	//USART1_IRQHandler,                 // USART1
	InterruptHandler::DummyHandler,	//USART2_IRQHandler,                 // USART2
	InterruptHandler::DummyHandler,	//USART3_IRQHandler,                 // USART3
	InterruptHandler::DummyHandler,	//EXTI15_10_IRQHandler,              // External Line[15:10]s
	InterruptHandler::DummyHandler,	//RTC_Alarm_IRQHandler,              // RTC Alarm (A and B) through EXTI Line
	InterruptHandler::DummyHandler,	//OTG_FS_WKUP_IRQHandler,            // USB OTG FS Wakeup through EXTI line
	InterruptHandler::DummyHandler,	//TIM8_BRK_TIM12_IRQHandler,         // TIM8 Break and TIM12
	InterruptHandler::DummyHandler,	//TIM8_UP_TIM13_IRQHandler,          // TIM8 Update and TIM13
	InterruptHandler::DummyHandler,	//TIM8_TRG_COM_TIM14_IRQHandler,     // TIM8 Trigger and Commutation and TIM14
	InterruptHandler::DummyHandler,	//TIM8_CC_IRQHandler,                // TIM8 Capture Compare
	InterruptHandler::DummyHandler,	//DMA1_Stream7_IRQHandler,           // DMA1 Stream7
	InterruptHandler::DummyHandler,	//FMC_IRQHandler,                    // FMC
	InterruptHandler::DummyHandler,	//SDIO_IRQHandler,                   // SDIO
	InterruptHandler::DummyHandler,	//TIM5_IRQHandler,                   // TIM5
	InterruptHandler::DummyHandler,	//SPI3_IRQHandler,                   // SPI3
	InterruptHandler::DummyHandler,	//UART4_IRQHandler,                  // UART4
	InterruptHandler::DummyHandler,	//UART5_IRQHandler,                  // UART5
	InterruptHandler::DummyHandler,	//TIM6_DAC_IRQHandler,               // TIM6 and DAC1&2 underrun errors
	InterruptHandler::DummyHandler,	//TIM7_IRQHandler,                   // TIM7
	InterruptHandler::DummyHandler,	//DMA2_Stream0_IRQHandler,           // DMA2 Stream 0
	InterruptHandler::DummyHandler,	//DMA2_Stream1_IRQHandler,           // DMA2 Stream 1
	InterruptHandler::DummyHandler,	//DMA2_Stream2_IRQHandler,           // DMA2 Stream 2
	InterruptHandler::DummyHandler,	//DMA2_Stream3_IRQHandler,           // DMA2 Stream 3
	InterruptHandler::DummyHandler,	//DMA2_Stream4_IRQHandler,           // DMA2 Stream 4
	InterruptHandler::DummyHandler,	//ETH_IRQHandler,                    // Ethernet
	InterruptHandler::DummyHandler,	//ETH_WKUP_IRQHandler,               // Ethernet Wakeup through EXTI line
	InterruptHandler::DummyHandler,	//CAN2_TX_IRQHandler,                // CAN2 TX
	InterruptHandler::DummyHandler,	//CAN2_RX0_IRQHandler,               // CAN2 RX0
	InterruptHandler::DummyHandler,	//CAN2_RX1_IRQHandler,               // CAN2 RX1
	InterruptHandler::DummyHandler,	//CAN2_SCE_IRQHandler,               // CAN2 SCE
	InterruptHandler::DummyHandler,	//OTG_FS_IRQHandler,                 // USB OTG FS
	InterruptHandler::DummyHandler,	//DMA2_Stream5_IRQHandler,           // DMA2 Stream 5
	InterruptHandler::DummyHandler,	//DMA2_Stream6_IRQHandler,           // DMA2 Stream 6
	InterruptHandler::DummyHandler,	//DMA2_Stream7_IRQHandler,           // DMA2 Stream 7
	InterruptHandler::DummyHandler,	//USART6_IRQHandler,                 // USART6
	InterruptHandler::DummyHandler,	//I2C3_EV_IRQHandler,                // I2C3 event
	InterruptHandler::DummyHandler,	//I2C3_ER_IRQHandler,                // I2C3 error
	InterruptHandler::DummyHandler,	//OTG_HS_EP1_OUT_IRQHandler,         // USB OTG HS End Point 1 Out
	InterruptHandler::DummyHandler,	//OTG_HS_EP1_IN_IRQHandler,          // USB OTG HS End Point 1 In
	InterruptHandler::DummyHandler,	//OTG_HS_WKUP_IRQHandler,            // USB OTG HS Wakeup through EXTI
	InterruptHandler::DummyHandler,	//OTG_HS_IRQHandler,                 // USB OTG HS
	InterruptHandler::DummyHandler,	//DCMI_IRQHandler,                   // DCMI
    0,                                 // Reserved
	InterruptHandler::DummyHandler,	//HASH_RNG_IRQHandler,               // Hash and Rng
	InterruptHandler::DummyHandler	//FPU_IRQHandler,                    // FPU
};

// ----------------------------------------------------------------------------

// Processor ends up here if an unexpected interrupt occurs or a
// specific handler is not present in the application code.
// When in DEBUG, trigger a debug exception to clearly notify
// the user of the exception and help identify the cause.

void __attribute__ ((section(".after_vectors")))
Default_Handler(void)
{
#if defined(DEBUG)
__DEBUG_BKPT();
#endif
while (1)
  {
  }
}

// ----------------------------------------------------------------------------
